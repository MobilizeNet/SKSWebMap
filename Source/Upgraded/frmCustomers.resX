<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</resheader>
  <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>3225, 17</value>
  </data>
  <data name="txtField.Location" type="System.Drawing.Point, System.Drawing">
    <value>3313, 17</value>
  </data>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        EQAAAk1TRnQBSQFMAgEBBgEAAQoBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABMAMAAQEBAAEYBgABJP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AB4AJP8C9AH1ATQBOgFHATQBOgFH
        AYMBhwGND/8GwAaABsAP/2AAIf8B8gLzATQBOgJHAVQBfAE5AXkBzwFHAYABrQn/A8ACAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wPACf9gAB7/AvQB9QE0AToCRwFUAXwBOQF5Ac8BVwG0AeoBewGX
        AaoG/wPAAgAB/wIAAf8DwAz/A8ACAAH/AgAB/wPABv9gABv/AfMC9AE0AToCRwFUAXwBOQF5Ac8BVwG0
        AeoBewGXAaoG/wPAAgAB/wIAFv8CAAH/AgAB/wIAAf8DwAP/YAAb/wE0AToCRwFUAXwBOQF5Ac8BVwG0
        AeoBewGXAaoJ/wIAAf8CABb/AgAB/wIAAf8DgAIAAf8CAAT/YAAG/wHZAdABygGtAZgBjQGeAYUBeAGY
        AX8BcQGaAYIBdAGnAZIBhwE0AToCRwFUAXwBOQF5Ac8BVwG0AeoBewGXAaoM/wIAAf8DgBL/AgAB/wIA
        Af8DgAP/A4ACAAH/A8BgAAP/AcoBvAGzAakBkQGCAbgBogGIAeQB0QGiAfYB5gGuAdIBvQGZAacBjwF5
        AZIBeAFqAWUBdwGaAVcBtAHqAXsBlwGqDP8DwAIAAf8DwA//AgAB/wIAAf8DgAb/A8ACAAH/A8BgAAHd
        AdUBzwGxAZsBjAHpAdUBpwH/AfIBtAH/AesBsQH/Ae0BwQH/AfcB1gH/Af0B1wHMAbICkQF5AW0BewGX
        AaoP/wPAAgAQ/wIAAf8CAAH/A4AM/wIAAf8DgGAAAcABrgGhAdABvQGgAf8B8AG4Af8B5gGzAf8B5AG0
        Af8B3QGpAf8B4gGvAf8B8gHUAf8B/QHXAawBkQF6AZgBhQF+D/8DwAIADf8CAAH/AgAB/wOAD/8CAAH/
        A8BgAAHAAawBnAHvAd8BswH/AfEBxAH/AfEBzwH/AfYB0wH/AfIByAH/AeMBrwH/AeABrQH/AfYB0wHZ
        AcQBmwGYAX8Bcw//A8ACAAH/A8AG/wIAAf8CAAH/A4AP/wPAAgAB/wPAYAABxAGxAaIB/gHxAboB/wH5
        AdwB/wH6AegB/wH6AeUB/wH4AdsB/wHyAcgB/wHdAakB/wHsAbsB9QHkAa0BlgF8AW4S/wIAAf8CAAT/
        AgAB/wIAAf8DgBL/A4ACAAT/YAABzAG8AasB9AHqAc0B/wH7AewB/wH9AfgB/wH9AfYB/wH6AeYB/wH2
        AdMB/wHlAbIB/wHqAa4B3wHMAZ4BmwGCAXQS/wOAAgAB/wIAAf8CAAH/A4AS/wPAAgAB/wIABP9gAAHT
        AcMBtQHhAdQBwQH/Af4B8wH/Af0B9QH/Af0B9QH/AfoB6gH/AfIB0QH/AeUBsQH/AfEBswG0AZsBgwGq
        AZQBiRX/AgAB/wIAAf8CABP/A8ACAAH/AgAH/2AAAeQB2gHSAdcByAG3AfUB8AHbAf8B+gHeAf8B+QHf
        Af8B+AHaAf8B8QHLAf8B8AG4AeYB1AGlAaIBigF7AdkBzwHKGP8CAAH/AgAB/wIAAf8MwAIAAf8CAAH/
        AgAB/wPABv9gAAP+AdsBzwHDAdIBwwGzAeUB1gG7AfMB6AHEAf0B8wHMAewB3wG6AcgBtgGaAaoBkwGD
        AcUBtgGuHv8DgAIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wOADP9gAAP/Af4C/QHiAdgB0AHOAb0BrgHD
        AbIBogG7AaYBlwG3AaEBkgG5AaYBmAHaAdEByif/DMAS/2AAMP8DHAOTA+i3/wPBAxwCVgFVAZYBlAGT
        AecC5iT/Ae8BzgHPAcMBZAFlAaoBVQFWAaQBUgFTAZ8BTwFQAZoCTQGUAkoBjwJHAYkCRAGDAkEBeAE7
        ATwBeAE7ATwBcgI5AW4BNgE3Qv8BMAFcATcBKQFSATEBJwFPAS8BJgFNAS4BNAFaATsV/wOkAecB3QHY
        AUABPAE6AS8BLAEqAWYBbAFuAe8B8gHzA/4b/wHPAWsBbAHzAY4BjwHmAYABgQGqAUQBJAFHATIBIQHD
        AbQBqwHGAbsBswHKAcEBvAHOAcgBxAFWAU0BSAGeAT4BMwGcAT0BNgGYATkBMQFyAjkG/wHRAdcB/wF4
        AYwB/wHFAc4B/wHzAfUB/wL+EP8B+wH8Af8B9gH3Gf8BMAFhATgBMgGaAU8BLAGWAUkBJQGSAUQBNwFe
        AT4V/wHbAdkB1wGZAZYBkgHnAd0B2AFoAaEBtAElAVQBZQE5ATwBQAHsAfEB8xv/AdEBbwFwAf8BmQGa
        AewBhgGHAeYBgAGBAXEBWwFLAUcBPAE0AY0BeAFoAe0B4AHYAfEB5wHgAY8BfwFzAaMBQQE1AaIBQgE8
        AZwBPQE1AXgBOwE8A/8B+QH6Af8BgwGWAf8BDAEoAeEBMAFGAdsB3AHhAf8C/Q3/AfwB/QH/AWoBfgH2
        Ac4B1QH/Av0W/wE3AWsCPwGiAVkBOAGdAVQBMQGaAU4BOgFnAUIY/wG8AbMBrQGDAbcBwwGgAeAB8AFc
        AcAB2wEuAWEBcwE9AUMBSAHiAeUB5xj/AdQBdQF2Af8BnwGgAfUBkAGRAewBhgGHAXEBWwFLAwABRwE8
        ATQB6QHZAc4B7AHdAdQBhQF0AWcBrgFLAUMBqgFJAUQBowFCATwBfQI+Bv8BuQHEAf8BFgE3AfYBCQEi
        AdEBVwFoAeEB9QH2Cv8C/QH/Ad4B4gH/AQ8BJQHCAcsB0QH2Av0W/wE5AXMBQQFNAasBZgFFAaYBXwE9
        AaEBWAE9AW0BRRj/AdoB5wHrAWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHbAS0BWgFpAVEBVQFZAdYB3gHh
        Ff8B1wF7AXwB/wGpAaoB+wGfAaAB9QGTAZQBcQFbAUsBcQFbAUsBcQFbAUsBcQFbAUsBdgFiAVIBfQFq
        AVsBugFWAVQBsgFPAUwBqgFJAUQBgwJBBv8B+AH5Af8BYwF6Af8BIQFCAf8BFgEsAdABrwG2Ae4G/wH4
        AfkB/wHyAfQB/wEuAUcB5wFOAWAB4QHiAeQB9gH3AfgK/wFQAY4BVwFpAZ0BbwFoAZsBbgFrAZsBcAE/
        AXwBRgFbAbQBcQFTAa8BagFLAaoBZAE1AWsBPQE0AWgBPAEzAWcBOwEyAWQBOQEwAWABOA//AdoB5wHr
        AWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHbASoBVAFjAVwBawFxAd8B5QHnEv8B2wGDAYQB/wGzAbQB/wGt
        Aa4B/AGjAaQB9AGOAY8B7AGGAYcB5gGAAYEB3wF5AXoB1wFxAXIB0QFrAWwBwQFdAVwBugFWAVQBsgFQ
        AUwBiQJECf8B6QHsAf8BQgFeAf8BIAFBAfQBLQFDAdsBwAHFAe4B9QH2Af8B9QH2Af8BcwGHAf8BDQEl
        AdEBzQHSAfYP/wFRAZ8BWAGFAc8BlAF/AcoBjwF3AcYBiQFwAcEBgwFpAb0BfQFhAbgBdgFZAbMBcAFR
        Aa4BagFJAakBYwFCAaUBXAE7AZ8BVgE4AXABQBL/AdEB3wHkAWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHb
        ASgBTgFaASsBPgFHAeEB5wHpD/8B3wGKAYsB/wG7AbwB/wG2AbcByQFjAWABxAFeAVYBvgFYAUsBuAFS
        AT8BswFNATQBrQFHASgBpwFBARwBoQE7AREBwQFdAVwBugFWAVQBjwJHCf8C/QH/AeIB5gH/ATkBVgH/
        ARsBPQH/AU0BYwHuAc8B1gH/AVYBbwH/AQ4BLAHpAZ0BrAH/Av4N/wH8AvsBVQGoAV0BjwHVAZwBigHR
        AZgBhAHNAZMBfQHKAY4BdgHGAYgBbgHAAYIBZwG7AXwBXwG3AXUBWAGyAW4BUAGtAWcBSAGoAWEBPgF6
        AUYV/wHWAeIB5wFnAacBtgGyAfIB/QGHAdkB7AFcAcAB2wEqAVEBXwElATcBPwHgAegB6wH9Av4J/wHi
        AZEBkgH/Ab0BvgHMAWYBZwb/AfsB+AL2Ae4B6gHwAeUB3gHqAdsB0gHlAdEBxgHhAcoBvQGhATsBEQHC
        AV0BXAGUAkoP/wHhAeYB/wE8AVkB/wETATYB/wEQATEB9gEOATEB8wE0AVIT/wH7AfoB+QFaAbABYQGX
        AdoBowGTAdgBoAGOAdQBnAGIAdABlwGDAcwBkgF7AckBjAF1AcQBhwFtAcABgQFlAbsBegFeAbYBcwFW
        AbEBbQFDAYUBShj/AdkB5AHpAWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHbAS0BWgFpASIBMwE7AeYB7AHv
        Af0C/gb/AeUBlwGYAf8BvQG+AdMBbQFuCf8B+wH4AvYB7gHqAfAB5QHeAeoB2wHSAeUB0QHGAacBQQEc
        AcwCZwGaAk0S/wHEAcwB/wE4AVYB/gEtAU0B/gExAU8B/wHuAfET/wH7AfoB+QFZAasBYAFYAaoBXgFW
        AacBXQFVAaYBXQFXAaoBXgGNAdMBmwGHAc8BlwGBAcwBkQFPAZsBVwFtAacBcwFtAaQBcwFLAY4BUwFI
        AYoBTxv/AdkB5AHpAWcBpwG2AbEB8gH9AYcB2gHsAVwBwAHbATABZAF0ASEBMgE6AeoC7wb/AekBngGf
        Af8BvQG+AdwBdgF3DP8B+wH4AvYB7gHqAfAB5QHeAeoB2wHSAa0BRwEoAdcBcQFyAZ8BTwFQDP8C/gH/
        AdkB3wH/AT8BWwH/AUYBYgH+ATIBUAH+ATgBVQH+AV0BdQH/AfcB+Bz/Af0B/AH7AVcBqwFeAZUB2QGi
        AZEB1gGeAYwB0gGaAVEBngFYAf0C/Cf/AdYB4gHnAWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHbAS8BYgFy
        AjUBkAHVAdcB5gP/Ae0BpgGnAf8BvQG+AeYBgAGBD/8B+wH4AvYB7gHqAfAB5QHeAbMBTQE0Ad8BeQF6
        AaQBUgFTCf8B+QH6Af8BlwGmAf8BKAFJAf4BNAFTAf4BZQF8Af8B1AHbAf8BdgGLAf8BOwFZAf4BdgGL
        Af8B8QHzGf8B/QH8AfsBWgGuAWIBmQHbAaUBmQHaAaQBlAHYAaIBVAGkAVsB/QL8Kv8B1AHgAeUBZwGn
        AbYBsgHzAf0BuQG7AbYBfQKGAU8BUgGiAjUBkAP/AfABrAGtAf8BvQG+Ae8BiQGKEv8B+wH4AvYB7gHq
        AbgBUgE/AWcCMwGqAVUBVgP/AegB6wH/AcsB0wH/AVYBbwH/ATQBUwH+ATsBWQH+AVoBcwH/AfUB9gT/
        AfcB+AH/AWUBewH+ATcBVgH+AX4BkQH/AfQB9Rn/AV0BtQFkAZkB2wGlAZkB2wGlAZkB2wGlAWkBtQFw
        Af8C/i3/AdMB4QHmAWcBpwG2AbUBqwGhAXcBlAHtAWsBgwHWAUABQwGZA/8B8wGyAbMB/wG9Ab4B+AGS
        AZMV/wH7AfgB9gG+AVgBSwGwAVgBWQGwAVgBWQP/AaQBsQH/AVYBbwH/AUYBYgH+AUgBZAH+AY4BngH/
        AfwB/Qr/AfgB+QH/AcIBywH/AUUBYQH+AW4Bgxn/AV0BsgFjAWIBvwFpAWIBvwFpAWEBvgFoAWoBtgFx
        M/8B0AHZAeUBXQFpAbYBlQGuAfgBdAGRAegBSQFQAaED/wH1AbYBtwH1AbYBtwHzAbIBswHxAa0BrgHu
        AacBqAHqAaEBogHnAZoBmwHkAZMBlAHgAY4BjwHdAYcBiAHaAYABgQHWAXoBewHTAXQBdQHRAW8BcAP/
        AZ8BrQH/AUsBZgH+AUYBYQH+AbQBvwH/AfwB/RD/AfsB/AH/Ad8B5AH/AZkBqF7/AccBzgHoAVIBXAGk
        AVMBXQGlAekB7AH1MP8B0gHZAf8BUAFqAf8BwgHLAf8C/SX/AUIBTQE+BwABPgMAASgDAAFAAwABMAMA
        AQEBAAEBBQABgAEBFgAD//8AggAL
</value>
  </data>
</root>